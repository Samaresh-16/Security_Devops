name: Security Scanning Pipeline

on: push

jobs:
  security_scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      issues: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.ZAP_GITHUB_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Samaresh-16_Security_Devops

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.18.3

      - name: Create reports directory
        run: mkdir -p reports

      - name: Scan Dependencies with Trivy
        run: trivy fs . > reports/trivy-dependency.txt

      - name: Build Project using Maven
        run: mvn clean package

      - name: Verify JAR File Exists
        run: ls -la target/

      - name: Rename JAR File
        run: mv target/security-demo-1.0-SNAPSHOT.jar target/app.jar
      
      - name: Build Docker Image
        run: docker build -t my-app -f docker/Dockerfile .

      - name: Scan Docker Image for Vulnerabilities
        run: trivy image my-app > reports/trivy-image.txt
      
      - name: Start Application
        run: |
          nohup java -jar target/app.jar &  # Start app in background
          sleep 5  # Give some time for the server to start

      - name: Check if App is Running
        run: curl -I http://localhost:8080/hello || exit 1
      

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.2.0  # Use latest version
        with:
          target: 'http://localhost:8080'
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'  # Use the correct image
          format: 'json'
          allow_issue_writing: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_json.json
        
